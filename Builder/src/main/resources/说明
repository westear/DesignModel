建造者模式: 也叫生成器模式，将一个复杂对象的构件与它的表示分离，使得同样的构建过程可以创建不同的表示。

角色：demo2是建造者模式的模板代码
    Product产品类：
        实现了模板方法模式
    Builder抽象建造者:
        规范产品的组建，一般由子类实现，demo1中的CarBuilder类
    ConcreteBuilder具体建造者:
        实现抽象创建类定义的所有方法，并且返回一个组建好的对象。demo1中的BenzBuilder和BMWBuilder就属于创造者
    Director导演类:
        负责安排已有的模块顺序，然后告诉Builder开始建造

优点：
    封装性： 可以使客户端不必知道产品内部组成的细节，如例子中我们就不必关心每个具体模型内部是如何实现的，产生对象的类是CarModel
    建造者独立，容易扩展： BenzModel和BWMModel是独立的，对系统扩展有利
    便于控制细节风险

使用场景:
    相同的方法，不同的执行顺序，产生不同的事件结果时，可以采用建造者模式
    多个部件或零件，都可以装配到一个对象中。但是产生的运行结果又不相同时，则可以使用该模式
    产品类非常复杂，或者产品类中的调用顺序不同产生不同的效能，这个时候使用建造者模式非常合适

建造者模式和工厂模式的差别是 建造者模式有顺序


