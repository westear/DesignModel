代理模式(委托模式)
demo1: 模拟游戏玩家玩游戏，代理代练游戏
demo2: 普通代理，调用者只知代理而不用知道真实的角色是谁，屏蔽了真实角色的变更对高层模块的影响。
       代理类和具体业务实现类同时继承接口，在具体业务实现类中传入代理类，场景类直接调用代理类.
demo3: 1.强制代理，高层调用类 new 了一个真实角色的对象，返回的却是对应的代理角色。
       2.IProxy 接口，代理是有个性的，一个类可以实现多个接口，完成不同任务的整合，以实现对基础方法的功能增强。
demo4: 动态代理在实现阶段不关心代理谁，而在运行阶段才指定代理哪个对象。
       使用了JDK提供的InvocationHandler的动态代理接口，对被代理类的方法进行代理
demo5: 动态代理的通用模板

类图特征：
    1. 抽象主题类：抽象类或者接口，一个普通的业务类型定义，无特殊要求
    2. 具体主题角色：委托角色，被代理角色，业务的具体执行者
    3. Proxy代理主题角色: 委托类，代理类。负责对真是角色的应用。

优点：
    1.职责清晰
    2.高扩展性
    3.智能化


